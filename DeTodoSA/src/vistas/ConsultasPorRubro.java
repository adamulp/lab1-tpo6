/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package vistas;

import entidades.Producto;
import entidades.Rubro;
import java.util.TreeSet;
import java.util.Vector;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Hollmann
 */
public class ConsultasPorRubro extends javax.swing.JInternalFrame {
    private TreeSet<Producto> productos;
    private DefaultTableModel modelo = new DefaultTableModel();

    
    //----------------------------------CONSTRUCTOR-------------------------------------
    /**
     * Creates new form consultasPorRubro
     */
    public ConsultasPorRubro(TreeSet<Producto> productos) {
        this.productos=productos;
        initComponents();
        llenarCombo();
        armarCabecera();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jcRubro = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtListadoPrecios = new javax.swing.JTable();

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("Listado de productos por rubro");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Elija rubro:");

        jcRubro.setSelectedIndex(-1);
        jcRubro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcRubroActionPerformed(evt);
            }
        });

        jtListadoPrecios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Código", "Descripcion", "Precio", "Stock"
            }
        ));
        jScrollPane1.setViewportView(jtListadoPrecios);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(82, 82, 82)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(jcRubro, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 66, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(108, 108, 108))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcRubro))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 367, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


//------------------------------------------------------------------------MÉTODOS-------------------------------------------------------------------------------------------------------------------------

//MÉTODO DE ACCIÓN AL HACER CLICK AL COMBO BOX
    private void jcRubroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcRubroActionPerformed
        // TODO add your handling code here:
        borrarLista();
        Rubro rubro = (Rubro) jcRubro.getSelectedItem();  //SE CASTEA A "RUBRO" PORQUE EL "getSelectedItem" DEVUELVE UN OBJETO.
        
        for (Producto prod: productos) {
            
            if(rubro.equals(prod.getRubro() ) ) { //LOS COMPARAMOS ASÍ YA QUE TENEMOS EL EQUALS SOBREESCRIBIDO EN LA CLASE "Rubro"
                
                Vector<Object> renglon = new Vector<>();
                renglon.add(prod.getCodigo());
                renglon.add(prod.getDescripcion());
                renglon.add(prod.getPrecio());
                renglon.add(prod.getStock());
                
                modelo.addRow(renglon);
            }
            
        }      
        
    }//GEN-LAST:event_jcRubroActionPerformed

//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    
    //MÉTODO PARA ASIGNARLE NOMBRES/ÍNDICES AL COMBO BOX (SE INICIALIZA EN EL CONSTRUCTOR)
    private void llenarCombo() {
        Rubro comestible = new Rubro(1, "Comestible");
        Rubro limpieza = new Rubro(2, "Limpieza");
        Rubro perfumeria = new Rubro(3, "Perfumeria");

        jcRubro.addItem(comestible);
        jcRubro.addItem(limpieza);
        jcRubro.addItem(perfumeria);

    }

//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------    
    
    //MÉTODO PARA ARMAR CABECERA DE UNA TABLA POR CÓDIGO (SE INICIALIZA EN EL CONSTRUCTOR)
    private void armarCabecera() {
        modelo.addColumn("Codigo");
        modelo.addColumn("Descripcion");
        modelo.addColumn("Precio");
        modelo.addColumn("Stock");
        jtListadoPrecios.setModel(modelo);
    }
        
 //-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    
    
    //MÉTODO PARA LIMPIAR LA TABLA(BORRAR FILAS)
    public void borrarLista() {
        int filas = modelo.getRowCount() - 1;
        for (int i = filas; i >= 0; i--) {
            modelo.removeRow(i);
        }

    }
    
//    private void llenarCombo(){
//        
//    }
//    private void armarCabecera(){
//        
//    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<Rubro> jcRubro;
    private javax.swing.JTable jtListadoPrecios;
    // End of variables declaration//GEN-END:variables
}
